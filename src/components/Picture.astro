---
import { Picture as AstroPicture } from "astro:assets";

import type { ImageMetadata } from "astro";

interface Props {
  src: ImageMetadata;
  alt: string;
  caption?: string;
  class?: string;
  contentWarning?: boolean;
  [props: string]: unknown;
}

const {
  src,
  alt,
  caption,
  contentWarning = false,
  class: className,
  ...props
} = Astro.props;
---

<div class:list={["picture-container", contentWarning && "content-warning"]}>
  {
    contentWarning && (
      <p>
        可能含有令人不适的内容
        <br />
        点击或轻触去除模糊
      </p>
    )
  }

  <AstroPicture
    loading="lazy"
    src={src}
    alt={alt}
    formats={["avif", "webp"]}
    class:list={["img-thumbnail thumb", className]}
    {...props}
  />

  <slot name="caption">
    {
      caption && (
        <>
          <br />
          <small>{caption}</small>
        </>
      )
    }
  </slot>
</div>

<style is:global>
  .picture-container {
    position: relative;
    width: 100%;
  }
  .picture-container > p {
    display: var(--warning, flex);
    position: absolute;
    inset: 0;
    color: white;
    z-index: 1;
    font-size: 0.9rem;
    justify-content: center;
    align-items: center;
    pointer-events: none;
  }
  .content-warning img {
    transition: 0.5s;
    filter: var(--filter, blur(20px) brightness(0.8));
  }
</style>

<script>
  document
    .querySelectorAll(".picture-container")
    .forEach(function (contentWarningText) {
      contentWarningText.addEventListener(
        "click",
        function (this: HTMLImageElement) {
          this.style.setProperty("--filter", "none");
          this.style.setProperty("--warning", "none");
        }
      );
    });
</script>
